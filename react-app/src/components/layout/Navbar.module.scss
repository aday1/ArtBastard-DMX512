/* Container for the toggle button and the nav content */
.navbarContainer {
  position: sticky; /* Keeps the whole block sticky */
  top: 0;
  z-index: 1001; /* Ensure toggle is above other sticky elements if needed */
  margin-bottom: 1.5rem; /* Retain original bottom margin */
  display: flex; /* Align toggle and nav content */
  align-items: flex-start; /* Align items to the top */
  gap: 0.5rem; /* Space between toggle and nav content if side-by-side */
}

/* Styles for the actual navigation content area */
.navContent {
  display: flex;
  justify-content: space-between; /* This was on .navbar before */
  gap: 1rem;
  padding: 1rem;
  background: var(--bg-secondary);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  /* position: sticky, top, z-index, margin-bottom are now on navbarContainer */
  animation: rainbow-bg 10s linear infinite;
  pointer-events: auto;
  transition: all 0.3s ease; /* For smooth expand if not using display:none */
  flex-grow: 1; /* Allow navContent to take available space */


  @keyframes rainbow-bg { /* Keep animation definition if used by navContent */
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  &.navContentCollapsed {
    display: none;
  }
}

.collapseToggle {
  background: var(--bg-primary-alpha, rgba(40, 40, 40, 0.7));
  border: 1px solid var(--border-color-soft, #555);
  color: var(--text-primary);
  font-size: 1rem; /* Adjusted size */
  cursor: pointer;
  padding: 0.6rem; /* Make it squarer for icons */
  border-radius: 6px;
  transition: all 0.2s ease;
  z-index: 1002; /* Above navContent if they could overlap */
  /* position: fixed; top: 1rem; left: 1rem; if fully independent positioning is needed */
  /* For now, it's part of the flex flow in navbarContainer */
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px; /* Explicit size */
  height: 40px; /* Explicit size */

  &:hover {
    background: rgba(var(--accent-color-rgb), 0.2);
    border-color: var(--accent-color);
    color: var(--accent-color);
  }
}

.navButtons {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    pointer-events: auto; // Make buttons clickable
    transition: all 0.3s ease;
    max-height: 200px; // Adjust based on your content
    opacity: 1;
  }
  
  .navButton {
    pointer-events: auto; // Explicitly make nav buttons clickable
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 6px;
    background: var(--bg-primary);
    color: var(--text-primary);
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.2s ease;
    min-width: 120px;
    justify-content: center;
    position: relative;
    overflow: hidden;

    &::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 2px;
      background: #4ecdc4;
      transform: scaleX(0);
      transition: transform 0.2s ease;
    }

    i {
      font-size: 1.1em;
      opacity: 0.8;
      transition: transform 0.2s ease;
    }

    span {
      font-weight: 500;
    }

    &:hover {
      background: rgba(78, 205, 196, 0.1);
      transform: translateY(-1px);

      i {
        transform: scale(1.1);
        opacity: 1;
      }

      &::after {
        transform: scaleX(1);
      }
    }

    &:active {
      transform: translateY(0);
    }

    &.active {
      background: rgba(78, 205, 196, 0.15);
      color: #4ecdc4;

      i {
        opacity: 1;
      }

      &::after {
        transform: scaleX(1);
      }
    }
  }
  /* Media query adjustments might be needed for .navbarContainer and .collapseToggle as well */
  @media (max-width: 768px) {
    .navContent { /* Apply responsive styles to navContent */
      padding: 0.5rem;
      gap: 0.5rem;
      flex-wrap: wrap;
      justify-content: center;
    }
    
    .navButton {
      min-width: auto;
      padding: 0.5rem 1rem;
      font-size: 0.9rem;
      flex: 1;
      min-width: 80px;

      span {
        display: none;
      }

      i {
        margin: 0;
        font-size: 1.2em;
      }
    }
  }
}
/* Ensure .navbar class from previous state is removed or updated if it was used elsewhere */
/* For example, if any global styles or other components referred to .navbar directly */