/* Modern navbar styling with improved typography and animations */
:root {
  --navbar-expanded-width: 220px;
  --navbar-collapsed-width: 56px;
}

.navbarContainer {
  position: fixed;
  right: 0;
  top: 0;
  height: 100vh;
  width: var(--navbar-expanded-width);
  z-index: 1001;
  display: flex;
  flex-direction: column; /* Changed from row to column */
  align-items: stretch; /* Ensure children take full width */
  gap: 0.5rem;
  font-family: var(--font-body);
  letter-spacing: -0.2px;
  background: var(--bg-secondary); /* Added background to container */
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-left: 1px solid var(--border-color-soft, rgba(255, 255, 255, 0.1)); /* Added border */
  box-shadow:
    -2px 0 8px rgba(0, 0, 0, 0.1),  /* Adjusted shadow for left border */
    -8px 0 24px rgba(0, 0, 0, 0.1);
  transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  padding: 0.5rem; /* Added padding to container */
}

.navBarCollapsedState { /* New class for controlling overall navbar width */
  width: var(--navbar-collapsed-width);
}

.navContent {
  display: flex;
  flex-direction: column; /* Stack items vertically */
  justify-content: flex-start; /* Align items to the top */
  gap: 0.5rem;
  /* padding: 0.375rem 0.5rem; Removed padding, now on container */
  /* background: var(--bg-secondary); Moved to container */
  /* backdrop-filter: blur(10px); Moved to container */
  /* -webkit-backdrop-filter: blur(10px); Moved to container */
  /* border-radius: 10px; Not needed for full height bar */
  /* box-shadow: none; Moved to container */
  flex-grow: 1;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); /* May need opacity transition */
  overflow-y: auto; /* Allow scrolling if content exceeds height */
  overflow-x: hidden; /* Hide horizontal overflow during transition */

  &.navContentCollapsed {
    /* display: none;  Replaced: Now controls content visibility within buttons */
    /* Instead of hiding the whole content, we hide text in buttons and center icons */
    .navButton span {
      display: none;
    }
    .navButton svg {
      margin: 0 auto; /* Center icon when text is hidden */
    }
    .networkStatusContainer { /* Example: if NetworkStatus has its own container */
      /* Potentially hide or change NetworkStatus rendering in collapsed state */
      span { display: none; } /* Hide text part of network status */
       /* Adjust padding or margins as needed */
    }
  }
}

.collapseToggle {
  background: var(--bg-primary);
  border: 1px solid var(--border-color-soft, rgba(255, 255, 255, 0.1));
  color: var(--text-primary);
  font-size: 0.875rem;
  cursor: pointer;
  padding: 0.375rem;
  border-radius: 8px;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 1002; /* Ensure it's above navContent if overlapping */
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%; /* Full width of the collapsed bar / or fixed size */
  height: 32px; /* Keep height or adjust as needed */
  margin-bottom: 0.5rem; /* Space between toggle and first button */
  /* backdrop-filter: blur(8px); */ /* Removed as container has blur */
  /* -webkit-backdrop-filter: blur(8px); */

  &:hover {
    background: var(--bg-tertiary); /* Slightly different hover for distinction */
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  &:active {
    transform: translateY(0);
  }
}

.navButtons {
  display: flex;
  flex-direction: column; /* Stack buttons vertically */
  gap: 0.375rem;
  /* flex-wrap: wrap; Not needed for single column */
  pointer-events: auto;
  width: 100%; /* Ensure it takes full width of navContent */
}

.navButton {
  pointer-events: auto;
  display: flex; /* Changed from inline-flex for better control */
  align-items: center;
  gap: 0.75rem; /* Increased gap for better visual separation with text */
  padding: 0.625rem 0.75rem; /* Adjusted padding for vertical layout */
  border: none;
  border-radius: 6px;
  background: transparent; /* Transparent background, rely on container */
  color: var(--text-primary);
  font-size: 0.875rem;
  line-height: 1.3;
  font-weight: 450;
  cursor: pointer;
  width: 100%; /* Buttons take full width of their container */
  justify-content: flex-start; /* Align content (icon + text) to the start */
  position: relative;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  font-family: var(--font-body);
  overflow: hidden; /* Hide text that overflows during collapse */
  white-space: nowrap; /* Prevent text wrapping */


  svg {
    width: 18px;
    height: 18px;
    color: inherit;
    opacity: 0.9;
    transition: transform 0.2s ease;
    flex-shrink: 0; /* Prevent icon from shrinking */
  }

  span {
    font-weight: inherit;
    transition: opacity 0.2s ease; /* Smoothly fade out text */
    opacity: 1;
  }

  &:hover {
    background: var(--bg-hover); /* Use a general hover variable */
    /* transform: translateY(-1px); Remove transform for vertical items */
    box-shadow: none; /* Remove individual shadow, rely on container */

    svg {
      transform: scale(1.1);
      opacity: 1;
    }
  }

  &:active {
    transform: translateY(0);
    background: var(--bg-active); /* Use a general active variable */
  }

  &.active {
    background: var(--color-primary);
    color: white;
    font-weight: 500;

    svg {
      opacity: 1;
    }
  }

  &.statusHighlight {
    background: var(--color-primary, rgba(78, 205, 196, 0.15));
    color: var(--color-primary, #4ecdc4);
    
    &:hover {
      background: var(--color-primary, rgba(78, 205, 196, 0.25));
    }
  }
}

/* Remove media query for nav button text hiding as it's now default for collapsed */
/* @media (max-width: 768px) { ... } */

/* Ensure NetworkStatus and other elements fit well */
/* This is a generic placeholder; specific styling for NetworkStatus might be needed */
.navContent > :global(.networkStatusWrapper), /* If NetworkStatus is wrapped */
.navContent > :global(.sparklesWrapper) { /* If Sparkles is wrapped */
  padding: 0.5rem 0;
  width: 100%;
}

.navBarCollapsedState .navContent > :global(.networkStatusWrapper) span,
.navBarCollapsedState .navContent > :global(.sparklesWrapper) span { /* Example for hiding text in these too */
  display: none;
}

.navBarCollapsedState .navContent > :global(.networkStatusWrapper) svg,
.navBarCollapsedState .navContent > :global(.sparklesWrapper) svg {
  margin: 0 auto; /* Center icon */
}

.networkStatusContainer {
  width: 100%;
  margin-top: auto; // Push to bottom of navbar
  padding-top: 0.5rem;
  border-top: 1px solid var(--border-color-soft, rgba(255, 255, 255, 0.1));
}

.navBarCollapsedState {
  .networkStatusContainer {
    padding-top: 0.25rem;
    
    // Hide text in NetworkStatus compact items when navbar is collapsed
    :global(.compactView) {
      .compactItem span {
        display: none !important;
      }
      
      .compactItem {
        justify-content: center;
        min-width: 24px;
        padding: 2px 4px;
        gap: 0;
      }
      
      // Stack items in a single column when collapsed
      flex-direction: column;
      gap: 0.125rem;
    }
  }
}

// Status icons for collapsed navbar
.statusIcons {
  display: flex;
  flex-direction: column;
  gap: 0.375rem;
  margin-top: auto;
  padding-top: 0.5rem;
  border-top: 1px solid var(--border-color-soft, rgba(255, 255, 255, 0.1));
}

.statusIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  border-radius: 6px;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: default;
  
  svg {
    width: 16px;
    height: 16px;
    transition: all 0.2s ease;
  }
  
  &:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
  
  // Status colors
  &.statusOk {
    background: rgba(76, 175, 80, 0.15);
    color: #4caf50;
    
    &:hover {
      background: rgba(76, 175, 80, 0.25);
    }
  }
  
  &.statusError {
    background: rgba(244, 67, 54, 0.15);
    color: #f44336;
    
    &:hover {
      background: rgba(244, 67, 54, 0.25);
    }
  }
  
  &.statusWarning {
    background: rgba(255, 152, 0, 0.15);
    color: #ff9800;
    
    &:hover {
      background: rgba(255, 152, 0, 0.25);
    }
  }
  
  &.statusActive {
    background: rgba(33, 150, 243, 0.15);
    color: #2196f3;
    animation: pulse 1.5s infinite;
    
    &:hover {
      background: rgba(33, 150, 243, 0.25);
    }
  }
  
  &.statusInactive {
    background: rgba(158, 158, 158, 0.1);
    color: #9e9e9e;
    
    &:hover {
      background: rgba(158, 158, 158, 0.2);
    }
  }
  
  &.statusNeutral {
    background: rgba(96, 125, 139, 0.1);
    color: #607d8b;
    
    &:hover {
      background: rgba(96, 125, 139, 0.2);
    }
  }
}

// Animation for active status
@keyframes pulse {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.7;
    transform: scale(1.05);
  }
}