/* Node-Based Fixture Editor Styles */

.editorContainer {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--color-bg);
  z-index: 1000;
  display: flex;
  flex-direction: column;
  color: var(--color-text);
}

.toolbar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem;
  background: var(--color-card-bg);
  border-bottom: 1px solid var(--color-card-border);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.toolbarLeft,
.toolbarCenter,
.toolbarRight {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.toolbarLeft h2 {
  margin: 0;
  font-size: 1.2rem;
  font-weight: 600;
  color: var(--color-primary);
}

.toolButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background: var(--color-primary);
  color: white;
  border: none;
  border-radius: var(--border-radius);
  cursor: pointer;
  font-size: 0.9rem;
  font-weight: 500;
  transition: all 0.2s ease;

  &:hover {
    background: var(--color-primary-hover);
    transform: translateY(-1px);
  }

  &:active {
    transform: translateY(0);
  }
}

.channelPalette {
  position: absolute;
  top: 70px;
  left: 20px;
  width: 400px;
  background: var(--color-card-bg);
  border: 1px solid var(--color-card-border);
  border-radius: var(--border-radius);
  padding: 1rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  z-index: 100;

  h3 {
    margin: 0 0 1rem 0;
    font-size: 1.1rem;
    color: var(--color-primary);
  }
}

.channelGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
  gap: 0.75rem;
}

.channelTypeButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem;
  background: var(--color-bg);
  border: 2px solid var(--color-card-border);
  border-radius: var(--border-radius);
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 0.9rem;
  color: var(--color-text);

  &:hover {
    background: var(--color-card-bg);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  span {
    font-weight: 500;
  }
}

.canvas {
  flex: 1;
  position: relative;
  background: 
    linear-gradient(90deg, rgba(var(--color-primary-rgb), 0.05) 1px, transparent 1px),
    linear-gradient(rgba(var(--color-primary-rgb), 0.05) 1px, transparent 1px);
  background-size: 20px 20px;
  overflow: hidden;
  cursor: grab;

  &:active {
    cursor: grabbing;
  }
}

.node {
  position: absolute;
  min-width: 180px;
  background: var(--color-card-bg);
  border: 2px solid var(--color-card-border);
  border-radius: var(--border-radius);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  cursor: move;
  transition: all 0.2s ease;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
  }

  &.selected {
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.3);
  }

  &.fixture {
    border-color: #10b981;
    background: linear-gradient(135deg, var(--color-card-bg), rgba(16, 185, 129, 0.1));
  }

  &.channel {
    border-color: #3b82f6;
    background: linear-gradient(135deg, var(--color-card-bg), rgba(59, 130, 246, 0.1));
  }

  &.dmxOutput {
    border-color: #f59e0b;
    background: linear-gradient(135deg, var(--color-card-bg), rgba(245, 158, 11, 0.1));
  }
}

.nodeHeader {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem;
  background: rgba(var(--color-primary-rgb), 0.1);
  border-bottom: 1px solid var(--color-card-border);
  border-radius: var(--border-radius) var(--border-radius) 0 0;
}

.nodeIcon {
  width: 16px;
  height: 16px;
}

.nodeName {
  flex: 1;
  font-weight: 600;
  color: var(--color-text);
}

.dmxValue {
  padding: 0.2rem 0.5rem;
  background: var(--color-primary);
  color: white;
  border-radius: 12px;
  font-size: 0.8rem;
  font-weight: 600;
  font-family: var(--font-mono);
}

.nodeContent {
  padding: 0.75rem;
}

.fixtureInfo,
.channelInfo,
.dmxInfo {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  font-size: 0.9rem;
  color: var(--color-text-secondary);
}

.valueBar {
  height: 6px;
  background: rgba(var(--color-text-rgb), 0.1);
  border-radius: 3px;
  overflow: hidden;
  margin-top: 0.25rem;
}

.valueBarFill {
  height: 100%;
  background: var(--color-primary);
  transition: width 0.2s ease;
  border-radius: 3px;
}

.connectionPoints {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
}

.connectionPoint {
  position: absolute;
  width: 12px;
  height: 12px;
  border: 2px solid var(--color-primary);
  border-radius: 50%;
  background: var(--color-card-bg);
  pointer-events: all;
  cursor: crosshair;
  transition: all 0.2s ease;

  &:hover {
    transform: scale(1.3);
    background: var(--color-primary);
  }

  &.input {
    left: -6px;
    top: 50%;
    transform: translateY(-50%);
  }

  &.output {
    right: -6px;
    top: 50%;
    transform: translateY(-50%);
  }
}

.connection {
  z-index: 10;
}

.detailsPanel {
  position: absolute;
  top: 70px;
  right: 20px;
  width: 300px;
  background: var(--color-card-bg);
  border: 1px solid var(--color-card-border);
  border-radius: var(--border-radius);
  padding: 1rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  z-index: 100;

  h3 {
    margin: 0 0 1rem 0;
    font-size: 1.1rem;
    color: var(--color-primary);
  }
}

.nodeDetails {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.detailRow {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;

  label {
    font-weight: 600;
    color: var(--color-text);
    font-size: 0.9rem;
  }

  input,
  select {
    padding: 0.5rem;
    background: var(--color-bg);
    border: 1px solid var(--color-card-border);
    border-radius: var(--border-radius);
    color: var(--color-text);
    font-size: 0.9rem;

    &:focus {
      outline: none;
      border-color: var(--color-primary);
      box-shadow: 0 0 0 2px rgba(var(--color-primary-rgb), 0.2);
    }
  }
  input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    height: 6px;
    background: rgba(var(--color-text-rgb), 0.1);
    border-radius: 3px;
    
    &::-webkit-slider-thumb {
      -webkit-appearance: none;
      width: 18px;
      height: 18px;
      background: var(--color-primary);
      border-radius: 50%;
      cursor: pointer;
    }

    &::-moz-range-thumb {
      width: 18px;
      height: 18px;
      background: var(--color-primary);
      border-radius: 50%;
      cursor: pointer;
      border: none;
    }
  }

  span {
    font-family: var(--font-mono);
    font-weight: 600;
    color: var(--color-primary);
  }
}

/* Responsive Design */
@media (max-width: 768px) {
  .toolbar {
    flex-direction: column;
    gap: 1rem;
    padding: 0.75rem;
  }

  .toolbarLeft,
  .toolbarCenter,
  .toolbarRight {
    width: 100%;
    justify-content: center;
  }

  .channelPalette {
    width: calc(100% - 40px);
    left: 20px;
    right: 20px;
  }

  .detailsPanel {
    width: calc(100% - 40px);
    left: 20px;
    right: 20px;
  }

  .node {
    min-width: 140px;
  }
}

/* Dark Theme Adjustments */
[data-theme="dark"] {
  .node {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);

    &:hover {
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.4);
    }
  }

  .channelPalette,
  .detailsPanel {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
  }
}

/* Animation for smooth interactions */
.node,
.channelTypeButton,
.toolButton {
  transform-origin: center;
}

@keyframes nodeAppear {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.node {
  animation: nodeAppear 0.3s ease-out;
}

/* Connection animation */
.connection path {
  stroke-dasharray: 5;
  animation: connectionFlow 2s linear infinite;
}

@keyframes connectionFlow {
  to {
    stroke-dashoffset: -10;
  }
}
