.fixtureCanvasContainer {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1rem;
  border: 1px solid var(--border-color-soft, #ddd);
  border-radius: var(--border-radius-md, 6px);
  background: var(--bg-secondary, #f9f9f9);
}

.controls {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid var(--border-color-soft, #ddd);
  flex-wrap: wrap; // Allow controls to wrap
}

.uploadControl {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.uploadLabel {
  font-size: 0.9rem;
  color: var(--text-secondary);
}

.uploadInput {
  font-size: 0.9rem;
  padding: 0.3rem 0.5rem;
  border-radius: var(--border-radius-sm, 4px);
  border: 1px solid var(--border-color-strong, #ccc);
  background-color: var(--bg-primary);
  color: var(--text-primary);

  &:hover {
    border-color: var(--accent-color, #4ecdc4);
  }
}

.fixtureCanvas {
  border: 1px solid var(--border-color-strong, #ccc);
  border-radius: var(--border-radius-sm, 4px);
  background-color: #f0f0f0; // Explicit background for the canvas itself
  cursor: crosshair; // Indicate it's a drawing surface
  // Ensure it doesn't exceed container width if canvasSize is very large
  max-width: 100%; 
  height: auto; // Maintain aspect ratio if max-width kicks in
}

.masterControls {
  margin-left: auto; // Pushes this section to the right if space allows
}

.addMasterButton {
  padding: 0.5rem 1rem;
  border: 1px solid var(--accent-color-secondary, #8855ff);
  color: var(--accent-color-secondary, #8855ff);
  background-color: transparent;
  border-radius: var(--border-radius-md, 6px);
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    background-color: rgba(var(--accent-secondary-rgb, 136, 85, 255), 0.1);
    border-color: var(--accent-color-secondary-dark, #6a3ddf);
    color: var(--accent-color-secondary-dark, #6a3ddf);
    box-shadow: 0 1px 3px rgba(0,0,0,0.05);
  }
}

/* Placed Control Configuration Panel Styles */
.placedControlConfigPanel {
  border: 1px solid var(--border-color-strong, #ccc);
  border-radius: var(--border-radius-md, 6px);
  padding: 1rem;
  background-color: var(--bg-secondary, #f9f9f9);
  width: 280px; 
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  margin-left: 1rem; // Positioned next to other panels if canvasWrapper arranges them

  h4 {
    margin-top: 0;
    margin-bottom: 1rem;
    font-size: 1.1rem;
    color: var(--text-primary);
    border-bottom: 1px solid var(--border-color-soft, #ddd);
    padding-bottom: 0.5rem;
  }
  // Reuses .formGroup, .deleteButton, .closeButton from masterSliderConfigPanel styles
  
  .existingTargetsList {
    max-height: 120px;
    overflow-y: auto;
    margin-bottom: 0.75rem;
    padding: 0.5rem;
    background: var(--bg-primary-alpha, rgba(255,255,255,0.5));
    border-radius: var(--border-radius-sm);
  }

  .targetItem {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.4rem;
    border-bottom: 1px dashed var(--border-color-soft, #eee);
    font-size: 0.85rem;

    &:last-child {
      border-bottom: none;
    }

    span { // Overriding the block span from .formGroup inside this specific context
      display: inline;
      width: auto;
      padding: 0;
      border: none;
    }
  }

  .removeTargetButton {
    background: transparent;
    border: none;
    color: var(--color-danger, #e74c3c);
    cursor: pointer;
    font-size: 0.9rem;
    padding: 0.2rem 0.4rem;

    &:hover {
      color: var(--color-danger-dark, #c0392b);
      font-weight: bold;
    }
  }

  .addTargetForm {
    margin-top: 0.5rem;
    padding-top: 0.5rem;
    border-top: 1px solid var(--border-color-soft, #ddd);
    
    h6 {
      font-size: 0.9rem;
      margin-bottom: 0.5rem;
      color: var(--text-secondary);
    }
  }
}

/* Placed Fixture Configuration Panel Styles */
.placedFixtureConfigPanel {
  border: 1px solid var(--border-color-strong, #ccc);
  border-radius: var(--border-radius-md, 6px);
  padding: 1rem;
  background-color: var(--bg-secondary, #f9f9f9);
  width: 280px; // Fixed width for the panel
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  margin-left: 1rem; // If canvasWrapper is not used, or ensure spacing

  h4 {
    margin-top: 0;
    margin-bottom: 1rem;
    font-size: 1.1rem;
    color: var(--text-primary);
    border-bottom: 1px solid var(--border-color-soft, #ddd);
    padding-bottom: 0.5rem;
  }

  .existingControlsList {
    margin-bottom: 1rem;
    max-height: 150px; // Scroll if many controls
    overflow-y: auto;
    padding: 0.5rem;
    background: var(--bg-primary-alpha, rgba(255,255,255,0.5));
    border-radius: var(--border-radius-sm);
  }

  .noControlsText {
    font-size: 0.85rem;
    color: var(--text-meta);
    text-align: center;
    padding: 1rem 0;
  }

  .controlItem {
    padding: 0.4rem 0;
    border-bottom: 1px dashed var(--border-color-soft, #eee);
    font-size: 0.9rem;
    &:last-child {
      border-bottom: none;
    }
  }
  
  .addControlSection {
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid var(--border-color-soft, #ddd);

    h5 {
      font-size: 1rem;
      margin-bottom: 0.75rem;
    }
  }

  .formGroup { // Reusing from masterSliderConfigPanel, ensure it's generic enough
    margin-bottom: 0.8rem;

    label {
      display: block;
      font-size: 0.85rem;
      color: var(--text-secondary);
      margin-bottom: 0.3rem;
    }

    select { // Specific styling for select if needed
      width: 100%;
      padding: 0.5rem;
      border-radius: var(--border-radius-sm, 4px);
      border: 1px solid var(--border-color-strong, #ccc);
      font-size: 0.9rem;
      background-color: var(--bg-primary);
      color: var(--text-primary);
    }
  }

  .addButton { // Generic add button style
    width: 100%;
    padding: 0.6rem;
    border-radius: var(--border-radius-md, 6px);
    font-size: 0.9rem;
    cursor: pointer;
    transition: background-color 0.2s ease;
    background-color: var(--accent-color, #4ecdc4);
    color: #f0f0f0;
    border: none;
    margin-top: 0.5rem;

    &:hover {
      background-color: var(--accent-color-dark, #3aa89b);
    }
    &:disabled {
      background-color: var(--bg-tertiary, #e0e0e0);
      color: var(--text-meta);
      cursor: not-allowed;
    }
  }
}


/* Master Slider Configuration Panel Styles */
.canvasWrapper {
  display: flex;
  gap: 1rem;
  align-items: flex-start; // Align canvas and config panel at the top
}

.masterSliderConfigPanel {
  border: 1px solid var(--border-color-strong, #ccc);
  border-radius: var(--border-radius-md, 6px);
  padding: 1rem;
  background-color: var(--bg-secondary, #f9f9f9);
  width: 280px; // Fixed width for the panel
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);

  h4 {
    margin-top: 0;
    margin-bottom: 1rem;
    font-size: 1.1rem;
    color: var(--text-primary);
    border-bottom: 1px solid var(--border-color-soft, #ddd);
    padding-bottom: 0.5rem;
  }

  .formGroup {
    margin-bottom: 0.8rem;

    label {
      display: block;
      font-size: 0.85rem;
      color: var(--text-secondary);
      margin-bottom: 0.3rem;
    }

    input[type="text"],
    span {
      display: block;
      width: calc(100% - 1rem); // Account for padding if any
      padding: 0.5rem;
      border-radius: var(--border-radius-sm, 4px);
      border: 1px solid var(--border-color-strong, #ccc);
      font-size: 0.9rem;
    }
    
    span { // For read-only value
      background-color: var(--bg-primary, #fff);
      min-height: 2.2em; // Match input height roughly
      line-height: 1.2em;
    }
  }
  
  .panelMidiLearnButton {
    // Inherits from MidiLearnButton.module.scss, can add overrides
    width: 100%;
    padding: 0.5rem;
    margin-top: 0.2rem;
  }

  .targetsSection {
    margin-top: 1rem;
    margin-bottom: 1rem;
    padding-top: 0.5rem;
    border-top: 1px solid var(--border-color-soft, #ddd);
    
    h5 {
      margin-bottom: 0.5rem;
      font-size: 1rem;
    }
    // Placeholder text style
    p {
        font-size: 0.85rem;
        color: var(--text-meta);
    }
  }

  .deleteButton, .closeButton {
    width: calc(50% - 0.25rem); // Two buttons side-by-side with a small gap
    padding: 0.6rem;
    border-radius: var(--border-radius-md, 6px);
    font-size: 0.9rem;
    cursor: pointer;
    transition: background-color 0.2s ease;
    margin-top: 0.5rem;
  }

  .deleteButton {
    background-color: var(--color-danger, #e74c3c);
    color: #f0f0f0;
    border: none;
    margin-right: 0.5rem;

    &:hover {
      background-color: var(--color-danger-dark, #c0392b);
    }
  }

  .closeButton {
    background-color: var(--bg-tertiary, #e0e0e0);
    color: var(--text-primary);
    border: 1px solid var(--border-color-strong, #ccc);

    &:hover {
      background-color: var(--border-color-soft, #d5d5d5);
    }
  }
}


.fixturePalette {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex-wrap: wrap;
}

.paletteLabel {
  font-size: 0.9rem;
  color: var(--text-secondary);
  margin-right: 0.5rem;
}

.noFixtures {
  font-size: 0.85rem;
  color: var(--text-meta);
}

.fixtureSelectItem {
  padding: 0.4rem 0.8rem;
  border: 1px solid var(--border-color-strong, #ccc);
  border-radius: var(--border-radius-sm, 4px);
  cursor: pointer;
  font-size: 0.85rem;
  color: #f0f0f0; // Text color will be #f0f0f0 for colored buttons
  transition: all 0.2s ease;
  box-shadow: 0 1px 2px rgba(0,0,0,0.05);

  &:hover {
    opacity: 0.85;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }

  &.selected {
    border-width: 2px;
    border-color: var(--accent-color-dark, #3aa89b); // Darker accent for selection
    transform: scale(1.05);
    box-shadow: 0 3px 6px rgba(0,0,0,0.15);
    font-weight: bold;
  }
}
