import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState, useEffect, useRef } from 'react';
import styles from './HelpOverlay.module.scss';
import { MidiMonitor } from '../midi/MidiMonitor';
import { OscMonitor } from '../osc/OscMonitor';
export const HelpOverlay = () => {
    const [isVisible, setIsVisible] = useState(false);
    const [activeTab, setActiveTab] = useState('overview');
    const [searchQuery, setSearchQuery] = useState('');
    const searchInputRef = useRef(null);
    // Keyboard shortcuts
    useEffect(() => {
        const handleKeyDown = (e) => {
            if (e.ctrlKey) {
                switch (e.key) {
                    case 'h':
                    case 'H':
                        e.preventDefault();
                        setIsVisible(!isVisible);
                        break;
                    case '/':
                        e.preventDefault();
                        if (isVisible && searchInputRef.current) {
                            searchInputRef.current.focus();
                        }
                        break;
                    case 'Escape':
                        if (isVisible) {
                            e.preventDefault();
                            setIsVisible(false);
                        }
                        break;
                }
            }
        };
        window.addEventListener('keydown', handleKeyDown);
        return () => window.removeEventListener('keydown', handleKeyDown);
    }, [isVisible]);
    // Search functionality
    const filteredContent = (content) => {
        if (!searchQuery)
            return content;
        return content.toLowerCase().includes(searchQuery.toLowerCase());
    };
    const tabs = [
        { id: 'overview', label: 'Getting Started', icon: '🚀' },
        { id: 'dmx-basics', label: 'DMX Control', icon: '💡' },
        { id: 'midi-setup', label: 'MIDI Setup', icon: '🎹' },
        { id: 'osc-integration', label: 'OSC Control', icon: '📡' },
        { id: 'scene-management', label: 'Scene Management', icon: '🎬' },
        { id: 'shortcuts', label: 'Shortcuts', icon: '⌨️' },
    ];
    const renderTabContent = () => {
        switch (activeTab) {
            case 'overview':
                return (_jsxs("div", { className: styles.tabContent, children: [_jsx("h4", { children: "\uD83D\uDE80 Welcome to ArtBastard DMX512" }), _jsx("p", { children: "ArtBastard is a powerful, web-based DMX lighting control system that lets you control professional lighting equipment through various protocols." }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83C\uDFAF Quick Start Guide" }), _jsxs("ol", { className: styles.stepList, children: [_jsxs("li", { children: [_jsx("strong", { children: "Connect Hardware:" }), " Connect your DMX interface to your lighting fixtures"] }), _jsxs("li", { children: [_jsx("strong", { children: "Configure Fixtures:" }), " Go to Fixture Setup to define your lighting fixtures"] }), _jsxs("li", { children: [_jsx("strong", { children: "Create Scenes:" }), " Set up lighting scenes and save them for later use"] }), _jsxs("li", { children: [_jsx("strong", { children: "Setup Control:" }), " Configure MIDI controllers or OSC devices for hands-free control"] }), _jsxs("li", { children: [_jsx("strong", { children: "Perform:" }), " Use the interface to control your lights in real-time"] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDD27 System Requirements" }), _jsxs("ul", { children: [_jsx("li", { children: "Modern web browser (Chrome, Firefox, Safari, Edge)" }), _jsx("li", { children: "USB DMX interface or Art-Net compatible device" }), _jsx("li", { children: "DMX512 lighting fixtures" }), _jsx("li", { children: "Optional: MIDI controller or OSC-capable device" })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDCCA Interface Overview" }), _jsx("p", { children: "The interface is organized into modular panels that you can arrange to suit your workflow:" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "DMX Control Panel:" }), " Main fader interface for direct channel control"] }), _jsxs("li", { children: [_jsx("strong", { children: "Scene Control:" }), " Save and recall lighting scenes"] }), _jsxs("li", { children: [_jsx("strong", { children: "2D Canvas:" }), " Visual fixture layout and control"] }), _jsxs("li", { children: [_jsx("strong", { children: "Master Fader:" }), " Global brightness control"] }), _jsxs("li", { children: [_jsx("strong", { children: "Monitors:" }), " MIDI and OSC message monitoring"] })] })] })] }));
            case 'dmx-basics':
                return (_jsxs("div", { className: styles.tabContent, children: [_jsx("h4", { children: "\uD83D\uDCA1 DMX512 Control Basics" }), _jsx("p", { children: "DMX512 is the industry standard protocol for controlling stage lighting and effects." }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDD0C Hardware Setup" }), _jsxs("ol", { className: styles.stepList, children: [_jsxs("li", { children: [_jsx("strong", { children: "Connect Interface:" }), " Connect your USB DMX interface to your computer"] }), _jsxs("li", { children: [_jsx("strong", { children: "Chain Fixtures:" }), " Connect fixtures using DMX cables (XLR 3-pin or 5-pin)"] }), _jsxs("li", { children: [_jsx("strong", { children: "Set Addresses:" }), " Configure unique DMX addresses for each fixture"] }), _jsxs("li", { children: [_jsx("strong", { children: "Terminate Chain:" }), " Add a 120-ohm terminator to the last fixture"] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDCDD Fixture Configuration" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "DMX Address:" }), " Set starting channel for each fixture (1-512)"] }), _jsxs("li", { children: [_jsx("strong", { children: "Channel Mode:" }), " Choose the number of channels your fixture uses"] }), _jsxs("li", { children: [_jsx("strong", { children: "Fixture Profile:" }), " Define what each channel controls (brightness, color, etc.)"] }), _jsxs("li", { children: [_jsx("strong", { children: "Personality:" }), " Some fixtures have multiple modes - choose the right one"] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83C\uDF9B\uFE0F Control Methods" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "Direct Channel Control:" }), " Set individual DMX channel values (0-255)"] }), _jsxs("li", { children: [_jsx("strong", { children: "Fixture Control:" }), " Use fixture-specific controls (brightness, color, etc.)"] }), _jsxs("li", { children: [_jsx("strong", { children: "Scene Control:" }), " Save and recall preset lighting looks"] }), _jsxs("li", { children: [_jsx("strong", { children: "Real-time Control:" }), " Use MIDI or OSC for live performance"] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\u26A0\uFE0F Common Issues" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "No Output:" }), " Check DMX interface connection and drivers"] }), _jsxs("li", { children: [_jsx("strong", { children: "Flickering:" }), " Check for loose connections or missing terminator"] }), _jsxs("li", { children: [_jsx("strong", { children: "Wrong Colors:" }), " Verify fixture addressing and channel mapping"] }), _jsxs("li", { children: [_jsx("strong", { children: "Partial Control:" }), " Check fixture mode matches your configuration"] })] })] })] }));
            case 'midi-setup':
                return (_jsxs("div", { className: styles.tabContent, children: [_jsx("h4", { children: "\uD83C\uDFB9 MIDI Controller Setup" }), _jsx("p", { children: "Control your lighting using MIDI controllers, keyboards, and control surfaces." }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDD17 Connection Setup" }), _jsxs("ol", { className: styles.stepList, children: [_jsxs("li", { children: [_jsx("strong", { children: "Connect MIDI Device:" }), " USB or traditional MIDI cables"] }), _jsxs("li", { children: [_jsx("strong", { children: "Enable Web MIDI:" }), " Grant browser permission for MIDI access"] }), _jsxs("li", { children: [_jsx("strong", { children: "Select Device:" }), " Choose your controller from the MIDI settings"] }), _jsxs("li", { children: [_jsx("strong", { children: "Test Connection:" }), " Verify MIDI messages are being received"] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83C\uDF9B\uFE0F Control Mapping" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "Channel Faders:" }), " Map controller faders to DMX channels"] }), _jsxs("li", { children: [_jsx("strong", { children: "Scene Triggers:" }), " Assign pads/keys to trigger lighting scenes"] }), _jsxs("li", { children: [_jsx("strong", { children: "Master Controls:" }), " Map rotary knobs to master brightness and effects"] }), _jsxs("li", { children: [_jsx("strong", { children: "Transport Controls:" }), " Use play/stop buttons for sequence control"] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDCCA MIDI Message Types" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "Control Change (CC):" }), " Continuous controls like faders and knobs"] }), _jsxs("li", { children: [_jsx("strong", { children: "Note On/Off:" }), " Trigger events from keys and pads"] }), _jsxs("li", { children: [_jsx("strong", { children: "Program Change:" }), " Switch between different scene banks"] }), _jsxs("li", { children: [_jsx("strong", { children: "Aftertouch:" }), " Pressure-sensitive control for dynamic effects"] })] })] }), "            ", _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDD27 Popular Controllers" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "Akai APC series:" }), " Grid-based controllers perfect for scene triggering"] }), _jsxs("li", { children: [_jsx("strong", { children: "Novation Launchpad:" }), " RGB feedback and extensive grid control"] }), _jsxs("li", { children: [_jsx("strong", { children: "Behringer X-Touch:" }), " Professional mixing console with motorized faders"] }), _jsxs("li", { children: [_jsx("strong", { children: "Korg nanoKONTROL:" }), " Compact USB controller with faders and knobs"] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDCCA Live MIDI Monitor" }), _jsx("p", { children: "Use the MIDI Monitor below to test your controller and see incoming messages in real-time:" }), _jsx("div", { className: styles.monitorContainer, children: _jsx(MidiMonitor, {}) }), _jsx("p", { children: _jsx("em", { children: "The monitor shows the last 5 MIDI messages with details about message type, channel, and values." }) })] })] }));
            case 'osc-integration':
                return (_jsxs("div", { className: styles.tabContent, children: [_jsx("h4", { children: "\uD83D\uDCE1 OSC (Open Sound Control) Integration" }), _jsx("p", { children: "Control ArtBastard remotely using OSC messages from other applications or devices." }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83C\uDF10 Network Setup" }), _jsxs("ol", { className: styles.stepList, children: [_jsxs("li", { children: [_jsx("strong", { children: "Configure Port:" }), " Set OSC receive port (default: 8080)"] }), _jsxs("li", { children: [_jsx("strong", { children: "Network Access:" }), " Ensure firewall allows OSC traffic"] }), _jsxs("li", { children: [_jsx("strong", { children: "IP Address:" }), " Note your computer's IP for remote control"] }), _jsxs("li", { children: [_jsx("strong", { children: "Test Connection:" }), " Send test messages to verify setup"] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDCEC OSC Address Patterns" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "/dmx/channel/[1-512]" }), " - Control individual DMX channels"] }), _jsxs("li", { children: [_jsx("strong", { children: "/scene/trigger/[name]" }), " - Trigger saved scenes by name"] }), _jsxs("li", { children: [_jsx("strong", { children: "/master/brightness" }), " - Control master brightness (0.0-1.0)"] }), _jsxs("li", { children: [_jsx("strong", { children: "/fixture/[id]/brightness" }), " - Control fixture brightness"] }), _jsxs("li", { children: [_jsx("strong", { children: "/fixture/[id]/color/[r,g,b]" }), " - Set RGB color values"] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDD27 Compatible Software" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "TouchOSC:" }), " Create custom mobile control interfaces"] }), _jsxs("li", { children: [_jsx("strong", { children: "Max/MSP:" }), " Advanced programming and algorithmic control"] }), _jsxs("li", { children: [_jsx("strong", { children: "Pure Data:" }), " Open-source visual programming for lighting"] }), _jsxs("li", { children: [_jsx("strong", { children: "Reaper:" }), " DAW with built-in OSC support for music-synchronized lighting"] }), _jsxs("li", { children: [_jsx("strong", { children: "QLab:" }), " Show control software with OSC output capabilities"] })] })] }), "            ", _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDCA1 Example Use Cases" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "Mobile Control:" }), " Use tablet as wireless lighting console"] }), _jsxs("li", { children: [_jsx("strong", { children: "Music Sync:" }), " Sync lighting with audio software"] }), _jsxs("li", { children: [_jsx("strong", { children: "Automated Shows:" }), " Program sequences with timing"] }), _jsxs("li", { children: [_jsx("strong", { children: "Multi-User Control:" }), " Multiple operators with different interfaces"] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDCE1 Live OSC Monitor" }), _jsx("p", { children: "Use the OSC Monitor below to test your setup and see incoming messages in real-time:" }), _jsx("div", { className: styles.monitorContainer, children: _jsx(OscMonitor, {}) }), _jsx("p", { children: _jsx("em", { children: "The monitor displays incoming OSC messages with address patterns, arguments, and timestamps." }) })] })] }));
            case 'scene-management':
                return (_jsxs("div", { className: styles.tabContent, children: [_jsx("h4", { children: "\uD83C\uDFAC Scene Management" }), _jsx("p", { children: "Create, save, and organize lighting scenes for quick recall during performances." }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDCBE Creating Scenes" }), _jsxs("ol", { className: styles.stepList, children: [_jsxs("li", { children: [_jsx("strong", { children: "Set Lighting:" }), " Adjust fixtures to desired look"] }), _jsxs("li", { children: [_jsx("strong", { children: "Name Scene:" }), " Give it a descriptive name"] }), _jsxs("li", { children: [_jsx("strong", { children: "Add OSC Address:" }), " Optional OSC trigger address"] }), _jsxs("li", { children: [_jsx("strong", { children: "Save Scene:" }), " Store the current lighting state"] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83C\uDFAD Scene Organization" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "Naming Convention:" }), " Use clear, descriptive names (e.g., \"Verse_Blue\", \"Chorus_Bright\")"] }), _jsxs("li", { children: [_jsx("strong", { children: "Categories:" }), " Group scenes by song, color, or intensity"] }), _jsxs("li", { children: [_jsx("strong", { children: "Numbering:" }), " Use numbers for easy MIDI/OSC triggering"] }), _jsxs("li", { children: [_jsx("strong", { children: "Backup:" }), " Export scene lists for backup and sharing"] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\u26A1 Quick Save Options" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "2D Canvas Quick Save:" }), " Save current canvas state as scene"] }), _jsxs("li", { children: [_jsx("strong", { children: "Keyboard Shortcuts:" }), " Rapid scene saving with hotkeys"] }), _jsxs("li", { children: [_jsx("strong", { children: "Auto-naming:" }), " Timestamp-based naming for rapid workflow"] }), _jsxs("li", { children: [_jsx("strong", { children: "Overwrite Protection:" }), " Prevent accidental scene overwrites"] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDD04 Scene Recall" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "Manual Trigger:" }), " Click scene buttons in the interface"] }), _jsxs("li", { children: [_jsx("strong", { children: "MIDI Trigger:" }), " Assign MIDI notes or CCs to scenes"] }), _jsxs("li", { children: [_jsx("strong", { children: "OSC Trigger:" }), " Remote triggering via OSC messages"] }), _jsxs("li", { children: [_jsx("strong", { children: "Fade Times:" }), " Set transition speeds between scenes"] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDCC2 Import/Export" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "Scene Export:" }), " Save scenes to file for backup"] }), _jsxs("li", { children: [_jsx("strong", { children: "Scene Import:" }), " Load scenes from other projects"] }), _jsxs("li", { children: [_jsx("strong", { children: "Sharing:" }), " Share scene configurations with other users"] }), _jsxs("li", { children: [_jsx("strong", { children: "Version Control:" }), " Track changes to scene configurations"] })] })] })] }));
            case 'shortcuts':
                return (_jsxs("div", { className: styles.tabContent, children: [_jsx("h4", { children: "\u2328\uFE0F Keyboard Shortcuts" }), _jsx("p", { children: "Speed up your workflow with these keyboard shortcuts." }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDD27 General Controls" }), _jsxs("div", { className: styles.shortcutList, children: [_jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "Ctrl" }), " + ", _jsx("kbd", { children: "H" }), _jsx("span", { children: "Toggle Help Overlay" })] }), _jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "Ctrl" }), " + ", _jsx("kbd", { children: "/" }), _jsx("span", { children: "Focus Search in Help" })] }), _jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "Esc" }), _jsx("span", { children: "Close Help/Cancel Action" })] }), _jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "Space" }), _jsx("span", { children: "Emergency Blackout" })] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83C\uDFAD Scene Controls" }), _jsxs("div", { className: styles.shortcutList, children: [_jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "Ctrl" }), " + ", _jsx("kbd", { children: "S" }), _jsx("span", { children: "Quick Save Scene" })] }), _jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "1" }), " - ", _jsx("kbd", { children: "9" }), _jsx("span", { children: "Trigger Scene 1-9" })] }), _jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "Ctrl" }), " + ", _jsx("kbd", { children: "1-9" }), _jsx("span", { children: "Save to Scene Slot 1-9" })] }), _jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "Shift" }), " + ", _jsx("kbd", { children: "1-9" }), _jsx("span", { children: "Delete Scene 1-9" })] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83C\uDF9B\uFE0F Fader Controls" }), _jsxs("div", { className: styles.shortcutList, children: [_jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "M" }), _jsx("span", { children: "Toggle Master Fader" })] }), _jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "\u2191" }), " / ", _jsx("kbd", { children: "\u2193" }), _jsx("span", { children: "Adjust Selected Fader" })] }), _jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "Shift" }), " + ", _jsx("kbd", { children: "\u2191/\u2193" }), _jsx("span", { children: "Fine Adjust Selected Fader" })] }), _jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "0" }), _jsx("span", { children: "Zero All Faders" })] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDDBC\uFE0F 2D Canvas" }), _jsxs("div", { className: styles.shortcutList, children: [_jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "Ctrl" }), " + ", _jsx("kbd", { children: "Q" }), _jsx("span", { children: "Quick Save Canvas to Scene" })] }), _jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "Ctrl" }), " + ", _jsx("kbd", { children: "Click" }), _jsx("span", { children: "Multi-select Fixtures" })] }), _jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "Shift" }), " + ", _jsx("kbd", { children: "Drag" }), _jsx("span", { children: "Select Multiple Fixtures" })] }), _jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "Del" }), _jsx("span", { children: "Delete Selected Fixtures" })] })] })] }), _jsxs("div", { className: styles.section, children: [_jsx("h5", { children: "\uD83D\uDD0D Navigation" }), _jsxs("div", { className: styles.shortcutList, children: [_jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "Tab" }), _jsx("span", { children: "Cycle Through Panels" })] }), _jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "Ctrl" }), " + ", _jsx("kbd", { children: "Tab" }), _jsx("span", { children: "Switch Panel Focus" })] }), _jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "Ctrl" }), " + ", _jsx("kbd", { children: "F" }), _jsx("span", { children: "Find/Filter Fixtures" })] }), _jsxs("div", { className: styles.shortcut, children: [_jsx("kbd", { children: "F11" }), _jsx("span", { children: "Toggle Fullscreen" })] })] })] })] }));
            default:
                return _jsx("div", { children: "Select a tab to view content" });
        }
    };
    return (_jsxs(_Fragment, { children: [_jsx("button", { className: styles.helpButton, onClick: () => setIsVisible(!isVisible), title: "Show ArtBastard Help (Ctrl+H)", children: _jsx("i", { className: "fas fa-question-circle" }) }), isVisible && (_jsx("div", { className: styles.helpOverlay, onClick: (e) => e.target === e.currentTarget && setIsVisible(false), children: _jsxs("div", { className: styles.helpContent, children: [_jsxs("div", { className: styles.helpHeader, children: [_jsxs("div", { className: styles.headerLeft, children: [_jsx("h3", { children: "\uD83C\uDFB5 ArtBastard DMX512 Help" }), _jsxs("div", { className: styles.searchContainer, children: [_jsx("input", { ref: searchInputRef, type: "text", placeholder: "Search help content... (Ctrl+/)", value: searchQuery, onChange: (e) => setSearchQuery(e.target.value), className: styles.searchInput }), _jsx("i", { className: "fas fa-search" })] })] }), _jsx("button", { onClick: () => setIsVisible(false), className: styles.closeButton, title: "Close Help (Esc)", children: _jsx("i", { className: "fas fa-times" }) })] }), _jsx("div", { className: styles.helpTabs, children: tabs.map(tab => (_jsxs("button", { className: `${styles.tab} ${activeTab === tab.id ? styles.active : ''}`, onClick: () => setActiveTab(tab.id), children: [_jsx("span", { className: styles.tabIcon, children: tab.icon }), _jsx("span", { className: styles.tabLabel, children: tab.label })] }, tab.id))) }), _jsx("div", { className: styles.helpBody, children: renderTabContent() }), _jsx("div", { className: styles.helpFooter, children: _jsxs("div", { className: styles.footerInfo, children: [_jsxs("span", { children: ["\uD83D\uDCA1 Press ", _jsx("kbd", { children: "Ctrl+H" }), " to toggle this help anytime"] }), _jsx("span", { children: "\uD83C\uDFB5 ArtBastard DMX512 Lighting Control System" })] }) })] }) }))] }));
};
export default HelpOverlay;
