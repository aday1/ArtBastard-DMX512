import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { VERSION_HISTORY, CURRENT_VERSION } from '../../utils/version';
import styles from './ReleaseNotes.module.scss';
export const ReleaseNotes = ({ showModal, onClose }) => {
    const [selectedVersion, setSelectedVersion] = useState(CURRENT_VERSION);
    if (!showModal)
        return null;
    return (_jsxs("div", { className: styles.modal, children: [_jsx("div", { className: styles.modalBackdrop, onClick: onClose }), _jsxs("div", { className: styles.modalContent, children: [_jsxs("div", { className: styles.modalHeader, children: [_jsx("h2", { children: "Release Notes" }), _jsx("button", { className: styles.closeButton, onClick: onClose, children: _jsx("i", { className: "fas fa-times" }) })] }), _jsxs("div", { className: styles.modalBody, children: [_jsxs("div", { className: styles.versionList, children: [_jsx("h3", { children: "Version History" }), VERSION_HISTORY.map((version) => (_jsxs("div", { className: `${styles.versionItem} ${selectedVersion.version === version.version ? styles.active : ''}`, onClick: () => setSelectedVersion(version), children: [_jsxs("div", { className: styles.versionHeader, children: [_jsxs("span", { className: styles.versionNumber, children: ["v", version.version] }), _jsx("span", { className: `${styles.releaseType} ${styles[version.releaseType]}`, children: version.releaseType })] }), _jsx("div", { className: styles.versionDate, children: version.buildDate })] }, version.version)))] }), _jsxs("div", { className: styles.versionDetails, children: [_jsxs("div", { className: styles.detailsHeader, children: [_jsxs("h3", { children: ["Version ", selectedVersion.version, _jsx("span", { className: `${styles.releaseType} ${styles[selectedVersion.releaseType]}`, children: selectedVersion.releaseType })] }), _jsx("div", { className: styles.releaseDate, children: selectedVersion.buildDate })] }), _jsxs("div", { className: styles.featuresSection, children: [_jsx("h4", { children: "Features" }), _jsx("ul", { className: styles.featureList, children: selectedVersion.features.map((feature, index) => (_jsx("li", { children: feature }, index))) })] }), _jsxs("div", { className: styles.changelogSection, children: [_jsx("h4", { children: "Changelog" }), _jsx("ul", { className: styles.changelogList, children: selectedVersion.changelog.map((change, index) => (_jsx("li", { children: change }, index))) })] })] })] }), _jsx("div", { className: styles.modalFooter, children: _jsx("button", { className: styles.closeButtonSecondary, onClick: onClose, children: "Close" }) })] })] }));
};
