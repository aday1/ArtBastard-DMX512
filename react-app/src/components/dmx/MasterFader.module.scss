.masterFader {
  background: var(--color-card-bg); /* Changed background */
  padding: 1rem;
  border-radius: 15px 15px 0 0; /* Rounded corners only at the top */
  border: 1px solid var(--color-card-border); /* Changed border to use theme variable */
  border-bottom: none; /* No border at the bottom since it's docked */
  box-shadow: 0 -4px 16px rgba(78, 205, 196, 0.2);
  
  /* Fixed at the bottom of the screen */
  position: fixed;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%); /* Center horizontally */
  z-index: 1020;
  width: 90%; /* Wider to accommodate buttons */
  max-width: 900px; /* Limit maximum width */
  transition: width 0.3s ease, height 0.3s ease, padding 0.3s ease;
  &.minimized {
    padding: 0.5rem;
    height: auto;

    .header h3 {
      font-size: 1rem;
    }
    .headerActions {
      display: none;
    }
  }

  .header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid rgba(255, 255, 255, 0.2);
    cursor: grab;

    h3 {
      color: var(--text-primary);
      margin: 0;
      display: flex;
      align-items: center;
      gap: 0.5rem;

      &::before {
        content: "üéöÔ∏è";
        font-size: 1.2em;
      }
    }

    .windowControls {
      display: flex;
      gap: 0.5rem;

      .minimizeButton {
        background: none;
        border: none;
        color: var(--text-secondary);
        cursor: pointer;
        font-size: 1rem;
        padding: 0.25rem;
        &:hover {
          color: var(--text-primary);
        }
      }
    }

    .headerActions {
      display: flex;
      gap: 1rem; /* Increase gap between buttons */
      align-items: center;
      flex-wrap: wrap; /* Allow buttons to wrap if needed */
      justify-content: center; /* Center the buttons in the available space */
      width: 70%; /* Wider area for the buttons */

      // Button styles for all action buttons
      .fullOnButton, .blackoutButton, .slowFadeoutButton, .fadeBackupButton {
        padding: 0.6rem 1rem;
        color: #f0f0f0;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.9rem;
        min-width: 120px; /* Ensure buttons have consistent minimum width */

        &:hover {
          transform: translateY(-2px);
          box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
        }
        &:active {
          transform: translateY(0);
        }
        &:disabled {
          opacity: 0.5;
          cursor: not-allowed;
          transform: none;
          box-shadow: none;
        }
      }

      // Specific button styles
      .fullOnButton {
        background: linear-gradient(135deg, #ffa502, #ff6348);
        &:hover {
          box-shadow: 0 8px 25px rgba(255, 165, 2, 0.4);
        }
        &.active {
          background: linear-gradient(135deg, #2ed573, #1abc9c);
          box-shadow: 0 4px 15px rgba(46, 213, 115, 0.4);
        }
      }

      .blackoutButton {
        background: linear-gradient(135deg, #ff4757, #ff3742);
        &:hover {
          box-shadow: 0 8px 25px rgba(255, 71, 87, 0.4);
        }
      }

      .slowFadeoutButton {
        background: linear-gradient(135deg, #4e54c8, #8f94fb);
        &:hover:not(:disabled) {
          box-shadow: 0 8px 25px rgba(78, 84, 200, 0.4);
        }
      }
      
      .fadeBackupButton {
        background: linear-gradient(135deg, #11998e, #38ef7d);
        &:hover:not(:disabled) {
          box-shadow: 0 8px 25px rgba(17, 153, 142, 0.4);
        }
      }
    }
  }

  .faderContainer {
    display: flex;
    gap: 1.5rem;
    align-items: flex-start;

    .sliderWrapper {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.75rem;
      background: var(--bg-secondary);
      border-radius: 12px;
      padding: 1rem;
      border: 2px solid var(--accent-color);
      position: relative;
      z-index: 10;
      flex-direction: row; // Changed from column to row
      align-items: center; // Keep items vertically centered
      gap: 1rem; // Adjusted gap for horizontal layout
      
      // Allow pointer events on the wrapper
      pointer-events: auto;
    }

    // Renamed from .verticalSlider conceptually, but keeping class name for now as per task
    .verticalSlider {
      -webkit-appearance: none; /* Remove default WebKit appearance */
      appearance: none; /* Remove default platform appearance */
      width: 100%; /* Slider takes full width of its parent */
      height: 20px; /* Height of the slider track */
      background: var(--color-slider-track);
      border-radius: 10px; /* Rounded track edges */
      outline: none;
      cursor: pointer;
      transition: all 0.2s ease; // Keep existing transitions
      position: relative; // Keep for z-index context if needed
      z-index: 1000; // Keep for potential stacking issues
      
      pointer-events: auto !important;
      touch-action: none; // Keep for touch devices
      
      &:hover, &:active, &:focus {
        z-index: 1001; // Keep for potential stacking issues
      }

      &::-webkit-slider-thumb {
        -webkit-appearance: none; /* Required for custom thumb styling */
        appearance: none;
        width: 30px;   /* Width of the thumb */
        height: 30px;  /* Height of the thumb */
        background: var(--color-slider-thumb);
        border: 3px solid var(--accent-color);
        border-radius: 50%; /* Circular thumb */
        cursor: pointer;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        transition: all 0.2s ease;
        margin-top: -5px; /* Adjust thumb position to be centered on the track. (track_height - thumb_height)/2 = (20-30)/2 = -5px */
      }

      &::-webkit-slider-thumb:hover {
        transform: scale(1.1);
        box-shadow: 0 6px 20px rgba(78, 205, 196, 0.4);
      }

      &::-moz-range-thumb {
        width: 30px;   /* Width of the thumb */
        height: 30px;  /* Height of the thumb */
        background: var(--color-slider-thumb);
        border: 3px solid var(--accent-color);
        border-radius: 50%; /* Circular thumb */
        cursor: pointer;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        /* No margin-top needed for Firefox if track height is managed by box-sizing or similar */
      }
    }

    .valueDisplay {
        background: var(--bg-primary);
        color: var(--accent-color);
        padding: 0.5rem 0.75rem; // Adjusted padding
        border-radius: 6px; // Adjusted border-radius
        font-weight: bold;
        font-size: 1rem; // Adjusted font-size
        border: 2px solid var(--accent-color);
        min-width: 50px; // Adjusted min-width
        text-align: center;
        box-shadow: 0 2px 8px rgba(78, 205, 196, 0.2);
      }
    }

    .controls {
      flex: 1;
      display: flex;
      flex-direction: column;
      gap: 1rem; // Adjusted gap

      .oscConfig {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;

        label {
          color: var(--text-primary);
          font-weight: 600;
        }

        .addressInput {
          padding: 0.6rem; // Adjusted padding
          border: 2px solid var(--border-color);
          border-radius: 6px; // Adjusted border-radius
          background: var(--bg-primary);
          color: var(--text-primary);
          font-family: 'Courier New', monospace;
          transition: border-color 0.2s ease;

          &:focus {
            outline: none;
            border-color: var(--accent-color);
            box-shadow: 0 0 0 3px rgba(78, 205, 196, 0.1);
          }
        }
      }

      .midiConfig {
        display: flex;
        flex-direction: column;
        gap: 0.5rem; // Adjusted gap

        .midiStatus {
          .midiAssigned {
            color: var(--accent-color);
            font-weight: 600;
            padding: 0.4rem; // Adjusted padding
            background: rgba(78, 205, 196, 0.1);
            border-radius: 4px; // Adjusted border-radius
            display: inline-block;
          }

          .midiUnassigned {
            color: var(--text-secondary);
            font-style: italic;
          }
        }

        .midiActions {
          display: flex;
          gap: 0.5rem;
          align-items: center;

          .learnButton {
            padding: 0.6rem 1.2rem; // Adjusted padding
            background: var(--accent-color);
            color: #f0f0f0;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;

            &:hover:not(.learning) {
              background: var(--accent-hover);
              transform: translateY(-2px);
            }

            &.learning {
              background: #ffa502;
              animation: pulse 1.5s infinite;
            }

            @keyframes pulse {
              0%, 100% { opacity: 1; }
              50% { opacity: 0.7; }
            }
          }

          .clearButton {
            padding: 0.4rem; // Adjusted padding
            background: #ff4757;
            color: #f0f0f0;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.2s ease;            &:hover {
              background: #ff3742;
              transform: scale(1.1);
            }
          }
        }

      .channelInfo {
        padding: 0.6rem; // Adjusted padding
        background: var(--bg-primary);
        border-radius: 6px; // Adjusted border-radius
        border-left: 4px solid var(--accent-color);
        color: var(--text-secondary);
        font-size: 0.9rem;
      }
    }
  }

  @media (max-width: 768px) {
    width: 100%; /* Full width on mobile */
    border-radius: 15px 15px 0 0;
    
    .header {
      flex-direction: column;
      gap: 0.5rem;
      align-items: stretch;

      .headerActions {
        width: 100%;
        justify-content: space-between;
        gap: 0.5rem;
        
        .fullOnButton,
        .blackoutButton,
        .slowFadeoutButton,
        .fadeBackupButton {
          flex: 1;
          min-width: auto;
          padding: 0.5rem;
          font-size: 0.8rem;
        }
      }
    }

    .faderContainer {
      // flex-direction: column; // Keep as row or adjust as needed
      // align-items: center;
      // gap: 1.5rem;

      // No longer need to override .verticalSlider here for horizontal appearance
      // as it's now horizontal by default.
      // Specific mobile adjustments for size can be added if needed.
      /* Example for mobile specific thumb or track size if desired:
      .sliderWrapper .verticalSlider {
        height: 30px; // Thicker track for touch
        &::-webkit-slider-thumb {
          width: 35px;
          height: 35px;
          margin-top: -2.5px; // Adjust if track height changes
        }
        &::-moz-range-thumb {
          width: 35px;
          height: 35px;
        }
      }
      */

      .controls {
        width: 100%;

        .quickActions {
          .quickButton {
            min-width: auto;
          }
        }
      }
    }
  }
}
